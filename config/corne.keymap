/*
  * Copyright (c) 2020 The ZMK Contributors
  *
  * SPDX-License-Identifier: MIT
  */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

&mt {
    tapping-term-ms = <135>;
    quick-tap-ms = <125>;
    flavor = "balanced";
};

&lt {
    tapping-term-ms = <135>;
    quick-tap-ms = <125>;
    flavor = "hold-preferred";
};

#define DEFAULT 0
#define CODE 1
#define NUM 2
#define FUNC 3

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
                &none      &kp Q            &kp W      &kp F          &kp P         &kp G          &kp J             &kp L              &kp U            &kp Y      &kp BSPC            &none
                &none      &kp A            &kp R      &kp S          &kp T         &kp D          &kp H             &kp N              &kp E            &kp I      &kp O               &none
                &none      &mt LSHFT Z      &kp X      &kp C          &kp V         &kp B          &kp K             &kp M              &kp COMMA        &kp DOT    &mt RSHFT FSLH      &none
                                                       &kp LALT       &kp LGUI      &kp SPACE      &lt CODE TAB      &lt NUM ENTER      &kp LCTRL
            >;
        };

        code_layer {
            bindings = <
                &none      &kp UNDER           &kp MINUS     &kp PLUS       &kp EQUAL      &kp COLON             &kp ESC        &kp C_PREV        &kp C_PP        &kp C_NEXT        &kp DEL             &none
                &none      &kp LBRC            &kp LPAR      &kp RPAR       &kp RBRC       &kp NON_US_BSLH       &kp GRAVE      &kp LEFT          &kp UP          &kp DOWN          &kp RIGHT           &none
                &none      &mt LSHFT LBKT      &kp APOS      &kp DQT        &kp RBKT       &kp SEMI              &kp ENTER      &kp C_VOL_DN      &kp C_MUTE      &kp C_VOL_UP      &mt RSHFT CAPS      &none
                                                             &kp LALT       &kp LGUI       &kp SPACE             &none          &none             &kp LCTRL
            >;
        };

        number_layer {
            bindings = <
            &none      &kp EXCL       &kp AT      &kp HASH       &kp DLLR      &kp PRCNT         &kp CARET      &kp AMPS      &kp ASTERISK      &none        &kp BSPC   &none
            &none      &kp N1         &kp N2      &kp N3         &kp N4        &kp N5            &kp N6         &kp N7        &kp N8            &kp N9       &kp N0     &none
            &none      &kp LSHFT      &none       &none          &none         &mo FUNC      &none          &none         &kp COMMA         &kp DOT      &none      &none
                                                  &kp LALT      &kp LGUI       &kp SPACE         &none          &none         &kp LCTRL
            >;
        };

        function_layer {
            bindings =<
                &none      &bootloader       &none             &none             &none             &none             &none      &none      &none      &none      &none      &none
                &none      &bt BT_SEL 0      &bt BT_SEL 1      &bt BT_SEL 2      &bt BT_SEL 3      &bt BT_SEL 4      &none      &none      &none      &none      &none      &none
                &none      &bt BT_CLR        &none             &none             &none             &none             &none      &none      &none      &none      &none      &none
                                                               &none             &none             &none             &none      &none      &none
            >;
        };
    };
};