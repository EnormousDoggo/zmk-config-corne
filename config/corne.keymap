/*
  * Copyright (c) 2020 The ZMK Contributors
  *
  * SPDX-License-Identifier: MIT
  */

 #include <behaviors.dtsi>
 #include <dt-bindings/zmk/keys.h>
 #include <dt-bindings/zmk/bt.h>

&mt {
    tapping-term-ms = <135>;
    quick-tap-ms = <125>;
    flavor = "tap-preferred";
};

&lt {
    tapping-term-ms = <135>;
    quick-tap-ms = <125>;
    flavor = "hold-preferred";
};

/ {
    behaviors {
        tdq: tap_dance_q_esc {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE";
            #binding-cells  = <0>;
            tapping-term-ms = <135>;
            bindings = <&kp Q>, <&kp ESC>;
        };

        tdj: tap_dance_j_enter {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE";
            #binding-cells = <0>;
            tapping-term-ms = <135>;
            bindings = <&kp J>, <&kp ENTER>;
        };

        bth: balanced_tap_hold {
            compatible = "zmk,behavior-hold-tap";
            label = "BALANCED_TAP_HOLD";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <135>;
            quick-tap-ms = <125>;
            bindings = <&kp>, <&kp>;
        };
    };

    macros {
        spotlight: spotlight {
            label = "spotlight";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press &kp LGUI>, <&macro_tap &kp SPACE>, <&macro_release &kp LGUI>; 
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
                &trans      &kp Q            &kp W      &kp F          &kp P         &kp G                &kp J            &kp L            &kp U            &kp Y      &kp BSPC            &trans
                &trans      &kp A            &kp R      &kp S          &kp T         &kp D                &kp H            &kp N            &kp E            &kp I      &kp O               &trans
                &trans      &mt LSHFT Z      &kp X      &kp C          &kp V         &kp B                &kp K            &kp M            &kp COMMA        &kp DOT    &mt RSHFT FSLH      &trans
                                                        &kp LCTRL      &kp LALT      &bth LGUI SPACE      &lt 1 TAB        &lt 2 ENTER      &spotlight
            >;
        };

        code_layer {
            bindings = <
                &trans      &kp UNDER           &kp MINUS     &kp PLUS      &kp EQUAL      &kp COLON             &kp ESC        &kp C_PREV        &kp C_PP        &kp C_NEXT        &kp DEL             &trans
                &trans      &kp LBRC            &kp LPAR      &kp RPAR      &kp RBRC       &kp NON_US_BSLH       &kp GRAVE      &kp LEFT          &kp UP          &kp DOWN          &kp RIGHT           &trans
                &trans      &mt LSHFT LBKT      &kp APOS      &kp DQT       &kp RBKT       &kp SEMI              &kp ENTER      &kp C_VOL_DN      &kp C_MUTE      &kp C_VOL_UP      &mt RSHFT CAPS      &trans
                                                              &kp LCTRL     &kp LALT       &bth LGUI SPACE       &trans         &trans            &spotlight
            >;
        };

        number_layer {
            bindings = <
            &trans      &kp EXCL       &kp AT      &kp HASH      &kp DLLR      &kp PRCNT            &kp CARET      &kp AMPS      &kp ASTERISK      &kp LPAR      &kp RPAR            &trans
            &trans      &kp N1         &kp N2      &kp N3        &kp N4        &kp N5               &kp N6         &kp N7        &kp N8            &kp N9        &kp N0              &trans
            &trans      &kp LSHFT      &trans      &trans        &trans        &mo 3                &mo 3          &kp K         &kp COMMA         &kp DOT       &mt RSHFT FSLH      &trans
                                                   &kp LCTRL     &kp LALT      &bth LGUI SPACE      &trans         &trans        &spotlight
            >;
        };

        function_layer {
            bindings =<
                &trans      &bootloader       &trans            &trans            &trans            &trans            &trans      &trans      &trans      &trans      &bootloader      &trans
                &trans      &bt BT_SEL 0      &bt BT_SEL 1      &bt BT_SEL 2      &bt BT_SEL 3      &bt BT_SEL 4      &trans      &trans      &trans      &trans      &trans           &trans
                &trans      &bt BT_CLR        &trans            &trans            &trans            &trans            &trans      &trans      &trans      &trans      &trans           &trans
                                                                &trans            &trans            &trans            &trans      &trans      &trans
            >;
        };
    };
};