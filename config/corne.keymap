/*
  * Copyright (c) 2020 The ZMK Contributors
  *
  * SPDX-License-Identifier: MIT
  */

 #include <behaviors.dtsi>
 #include <dt-bindings/zmk/keys.h>
 #include <dt-bindings/zmk/bt.h>

 / {
    behaviors {
        td: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_0";
            #binding-cells = <0>;
            tapping-term-ms = <100>;
            bindings = <&kp>, <&kp>;
        };

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    macros {
        spotlight: spotlight {
            label = "ZM_spotlight";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LGUI>
                , <&macro_tap &kp SPACE>
                , <&macro_release &kp LGUI>
                ;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
                &trans      &td Q ESC        &kp W      &kp F      &kp F       &kp G               &td J ENTER      &kp L            &kp U            &kp Y      &kp BSPC            &trans
                &trans      &kp A            &kp R      &kp S      &kp T       &kp D               &kp H            &kp N            &kp E            &kp I      &kp O               &trans
                &trans      &hm LSHFT Z      &kp X      &kp C      &kp V       &kp B               &kp K            &kp M            &kp COMMA        &kp DOT    &hm RSHFT FSLH      &trans
                                                      &kp LCTRL  &kp LALT      &mt LGUI SPACE      &lt 1 TAB        &lt 2 ENTER      &spotlight
                >;
        };

        code_layer {
            bindings = <
                &trans &kp UNDER &kp MINUS        &kp PLUS        &kp EQUAL        &kp COLON    &kp N6    &kp N7    &kp N8     &kp N9  &kp N0    &trans
                &trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &kp LEFT  &kp UP    &kp DOWN  &kp RIGHT  &trans    &trans
                &trans        &trans        &trans        &trans        &trans        &trans    &trans    &trans    &trans     &trans  &trans    &trans
                                                &kp LGUI        &trans     &kp SPACE   &kp RET    &trans  &kp RALT
            >;
        };

        number_layer {
            bindings = <
            &trans  &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT  &kp CARET   &kp AMPS  &kp KP_MULTIPLY  &kp LPAR  &kp RPAR   &kp BSPC
            &trans    &trans  &trans    &trans    &trans     &trans  &kp MINUS  &kp EQUAL         &kp LBKT  &kp RBKT  &kp BSLH  &kp GRAVE
            &trans    &trans  &trans    &trans    &trans     &trans  &kp UNDER   &kp PLUS         &kp LBRC  &kp RBRC  &kp PIPE  &kp TILDE
                                    &kp LGUI    &trans  &kp SPACE    &kp RET     &trans         &kp RALT
            >;
        };

        function_layer {
            bindings =<
        &kp TAB        &kp N1        &kp N2        &kp N3        &kp N4        &kp N5    &kp N6    &kp N7    &kp N8     &kp N9  &kp N0  &kp BSPC
        &bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &kp LEFT  &kp UP    &kp DOWN  &kp RIGHT  &trans    &trans
        &kp LSHFT        &trans        &trans        &trans        &trans        &trans    &trans    &trans    &trans     &trans  &trans    &trans
                                                &kp LGUI        &trans     &kp SPACE   &kp RET    &trans  &kp RALT
            >;
        };
    };
 };
